{"ast":null,"code":"import { UserService } from \"@/services/UserService\";\nimport Spinner from \"@/components/Spinner\";\nexport default {\n  name: \"UserList\",\n  components: {\n    Spinner\n  },\n\n  /** State Data**/\n  data: function () {\n    /** Return state Object*/\n    return {\n      /** Arrays of User Data*/\n      loading: false,\n      //display a spinner\n      users: [],\n      errorMessage: null\n    };\n  },\n  created: async function () {\n    try {\n      this.loading = true;\n      let response = await UserService.getAllUsers();\n      this.loading = false;\n      this.users = response.data; //console.log(response.data)\n    } catch (e) {\n      this.loading = false;\n      this.errorMessage = e; //console.log(e);\n    }\n  }\n};","map":{"version":3,"mappings":"AA4DA,SAAQA,WAAR,QAA0B,wBAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,eAAe;EACbC,IAAI,EAAE,UADO;EAEbC,UAAU,EAAE;IAACF;EAAD,CAFC;;EAGb;EACAG,IAAI,EAAE,YAAW;IAEf;IACA,OAAO;MACL;MACEC,OAAM,EAAI,KAFP;MAEc;MACjBC,KAAK,EAAE,EAHJ;MAIHC,YAAW,EAAI;IAJZ,CAAP;EAQD,CAfY;EAgBbC,OAAM,EAAI,kBAAiB;IACzB,IAAI;MACF,KAAKH,OAAL,GAAe,IAAf;MACA,IAAII,QAAO,GAAI,MAAMT,WAAW,CAACU,WAAZ,EAArB;MACA,KAAKL,OAAL,GAAe,KAAf;MACA,KAAKC,KAAL,GAAaG,QAAQ,CAACL,IAAtB,CAJE,CAKF;IACF,CANA,CAOA,OAAOO,CAAP,EAAU;MACR,KAAKN,OAAL,GAAe,KAAf;MACA,KAAKE,YAAL,GAAoBI,CAApB,CAFQ,CAGR;IACF;EACF;AA7Ba,CAAf","names":["UserService","Spinner","name","components","data","loading","users","errorMessage","created","response","getAllUsers","e"],"sourceRoot":"","sources":["/Users/developer/Documents/vue3/vue-crash-course/src/components/UserList.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-3\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <p class=\"h3 fw-bold text-success\">User List</p>\n        <p class=\"fst-italic\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam amet architecto assumenda cum deleniti dignissimos\n          earum eos excepturi facere fugit itaque mollitia nisi odio quis, sapiente similique tenetur veniam vitae!</p>\n      </div>\n\n   <!--  Display Spinner    -->\n      <div v-if=\"loading\">\n        <Spinner />\n      </div>\n    </div>\n\n    <!--  Handling Errors    -->\n    <div v-if=\"errorMessage\">\n      <p class=\"fw-bold text-danger\">{{ errorMessage }}</p>\n    </div>\n<!--     <pre>{{ errorMessage}}</pre>-->\n\n    <div\n        v-if=\"!loading && users.length > 0\"\n        class=\"row\" >\n      <div class=\"col\">\n        <table class=\"table table-hover text-center table-striped\">\n           <thead class=\"bg-success text-white\">\n             <tr>\n               <th>Sno</th>\n               <th>Name</th>\n               <th>Email</th>\n               <th>Company</th>\n               <th>Website</th>\n               <th>Location</th>\n             </tr>\n           </thead>\n            <tbody>\n                <tr v-for=\"user in users\" :key=\"user.id\">\n                    <td> {{ user.id }}</td>\n                     <td>\n                       <router-link\n                           to=\"'/users/' + user.id\"\n                           class=\"text-decoration-none fw-bold text-success\">\n                           {{ user.name }}\n                       </router-link>\n                     </td>\n<!--                    <td> {{ user.name }}</td>-->\n                    <td> {{ user.email }}</td>\n                    <td> {{ user.company.name }}</td>\n                    <td> {{ user.website }}</td>\n                    <td> {{ user.address.city }}</td>\n                </tr>\n            </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {UserService} from \"@/services/UserService\";\nimport Spinner from \"@/components/Spinner\";\n\nexport default {\n  name: \"UserList\",\n  components: {Spinner},\n  /** State Data**/\n  data: function (){\n\n    /** Return state Object*/\n    return {\n      /** Arrays of User Data*/\n        loading : false, //display a spinner\n        users: [],\n        errorMessage : null\n\n      \n    };\n  },\n  created : async  function(){\n    try {\n      this.loading = true\n      let response = await UserService.getAllUsers();\n      this.loading = false;\n      this.users = response.data;\n      //console.log(response.data)\n    }\n    catch (e) {\n      this.loading = false;\n      this.errorMessage = e\n      //console.log(e);\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}